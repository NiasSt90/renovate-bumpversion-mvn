<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.onestytech.bvo</groupId>
	<artifactId>intentus</artifactId>
	<version>1.2.0-SNAPSHOT</version>
	<name>intentus-ng</name>
	<description>
		Kern des BVO. Enthaelt die Basisfunktionalitaet (REST-Services) der vier Domains: Vertriebspartner, Kunde, Vertrag, VC(Haushalt)
	</description>

	<properties>
		<java.version>11</java.version>
		<hibernate.version>5.4.27.Final</hibernate.version>
		<org.testcontainers.version>1.15.2</org.testcontainers.version>
		<keycloak.version>12.0.1</keycloak.version>
		<springdoc-openapi.version>1.5.7</springdoc-openapi.version>

		<!-- Sonarqube Vermessung -->
		<sonar.projectName>BVO-Intentus-NextGen</sonar.projectName>
		<sonar.language>java</sonar.language>
		<sonar.host.url>https://sonar.onesty-tech.de</sonar.host.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<!-- java.time.* und freemarker kommen noch nicht alleine klar -->
		<dependency>
			<groupId>no.api.freemarker</groupId>
			<artifactId>freemarker-java8</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- OpenApi aka Swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>
		<!-- Keycloak -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-data</artifactId>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-security-adapter</artifactId>
			<version>${keycloak.version}</version>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-authz-client</artifactId>
			<version>${keycloak.version}</version>
		</dependency>
		<dependency>
			<groupId>de.onesty-tech</groupId>
			<artifactId>keycloak-client-extensions</artifactId>
			<version>7.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-admin-client</artifactId>
			<version>${keycloak.version}</version>
		</dependency>
		<dependency>
			<groupId>de.onestytech.bvo</groupId>
			<artifactId>bvo-spring-security</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- Monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Micrometer Prometheus registry  -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- Xml Document in Entities -->
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>2.1.3</version>
		</dependency>
		<!-- dom4j deklariert jaxen als Optional/runtime. Aber die org.dom4j.DocumentFactory Klasse lässt sich ohne nicht laden -->
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<scope>compile</scope>
			<version>4.4.3</version><!-- fixt https://github.com/liquibase/liquibase/issues/1277, spring-boot-dependencies ist noch bei 4.3.5 -->
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.11</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-mapper-orm</artifactId>
			<version>6.0.9.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-backend-lucene</artifactId>
			<version>6.0.9.Final</version>
		</dependency>
		<dependency>
			<groupId>de.onesty-tech.hibernate</groupId>
			<artifactId>smartindexer</artifactId>
			<version>2.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.0</version>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>1.15.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Postgres-Test-Container-->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${org.testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${org.testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>reserve-tomcat-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<portNames>
								<portName>tomcat.http.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<wait>1000</wait>
					<maxAttempts>60</maxAttempts>
					<jmxPort>19599</jmxPort>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<!-- wird aktuell nur gestartet, um die OpenAPI-Specs zu extrahieren und in AsciiDOC zu konvertieren,
					die Integrationstests starten als SpringBootApplication selbst ihren Context, ohne Tomcat -->
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<environmentVariables>
								<PG_DB_SCHEMA_HANDLING>none</PG_DB_SCHEMA_HANDLING><!-- DB ist leer, daher kein validate -->
							</environmentVariables>
							<!-- TODO/PROBLEM: auf dem Jenkins wird in das lokale Docker-Postgres die "schema-pgsql.sql" durch die Unit-Tests eingespielt und dort sind die Änderungen der "Liquibase-Patches" bereits enthalten. D.h. wir müssen liquibase für die ITests hier abschalten.  -->
							<systemPropertyVariables>
								<spring.liquibase.enabled>false</spring.liquibase.enabled>
								<spring.datasource.url>jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</spring.datasource.url>
								<keycloak.configurationFile>file:${project.basedir}/src/test/resources/keycloak.json</keycloak.configurationFile>
							</systemPropertyVariables>
							<arguments>
								<argument>--server.port=${tomcat.http.port}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Extract OpenAPI-Specs from Running System during integration-test-phase-->
			<plugin>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiDocsUrl>http://localhost:${tomcat.http.port}/v3/api-docs</apiDocsUrl>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- convert openapi.json to AsciiDoc -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>5.1.1</version>
				<executions>
					<execution>
						<phase>post-integration-test</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<inputSpec>${project.build.directory}/openapi.json</inputSpec>
					<generatorName>asciidoc</generatorName>
					<output>${project.build.directory}/openapi-doc/</output>
					<generateModelDocumentation>true</generateModelDocumentation>
					<verbose>false</verbose>
					<configOptions>
						<skipExamples>true</skipExamples>
						<validateSpec>true</validateSpec>
						<headerAttributes>false</headerAttributes><!-- generate page without toc to include -->
					</configOptions>
				</configuration>
			</plugin>
			<!-- für das Dockerimage-Label -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<prefix>git</prefix>
					<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
					<verbose>false</verbose>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<skipPoms>false</skipPoms>
					<useNativeGit>true</useNativeGit>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>target/classes/git.properties</generateGitPropertiesFilename>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
					<gitDescribe>
						<skip>false</skip>
						<always>true</always>
						<abbrev>7</abbrev>
						<dirty>-dirty</dirty>
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<test.server.port>${tomcat.http.port}</test.server.port>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.7.0</version>
				<configuration>
					<from>
						<!--						<image>openjdk:11-jre-slim</image>-->
						<image>gcr.io/distroless/java:11</image>
					</from>
					<to>
						<image>${project.artifactId}</image>
						<tags>
							<tag>2022-09</tag>
							<tag>2022-09.0</tag>
						</tags>
					</to>
					<container>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<ports>
							<port>8080</port>
						</ports>
						<labels>
							<git.commit>${git.commit.id}</git.commit>
							<git.version>${git.commit.id.describe}</git.version>
						</labels>
					</container>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sahli.asciidoc.confluence.publisher</groupId>
				<artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
				<version>0.12.0</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
					<configuration>
						<skipTests>${skipITs}</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.8.0.2131</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.6</version>
					<executions>
						<execution>
							<id>agent-for-ut</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>after-unit-test-execution</id>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>before-integration-test-execution</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
						</execution>
						<execution>
							<id>after-integration-test-execution</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report-integration</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sahli.asciidoc.confluence.publisher</groupId>
					<artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
					<version>0.12.0</version>
					<configuration>
						<asciidocRootFolder>.</asciidocRootFolder>
						<spaceKey>BVO</spaceKey>
						<ancestorId>154599440</ancestorId>
						<sourceEncoding>UTF-8</sourceEncoding>
						<rootConfluenceUrl>https://confluence.onesty-tech.de</rootConfluenceUrl>
						<skipSslVerification>false</skipSslVerification>
						<username>${env.CONFLUENCE_LOGIN}</username>
						<password>${env.CONFLUENCE_PASSWORD}</password>
						<publishingStrategy>APPEND_TO_ANCESTOR</publishingStrategy>
						<versionMessage>Version ${project.version}</versionMessage>
						<attributes>
							<project-version>${project.version}</project-version>
						</attributes>
						<skip>${skipDokuPush}</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>CI</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<spring.profiles.active>${spring.profile}</spring.profiles.active>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>nexus</id>
			<name>Nexus Repository from Onesty-Tech GmbH</name>
			<url>https://nexus.onesty-tech.de/repository/maven-public/</url>
			<snapshots/>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Nexus Repository from Onesty-Tech GmbH</name>
			<url>https://nexus.onesty-tech.de/repository/maven-public/</url>
			<snapshots>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
